(()=>{"use strict";var e=document.querySelector(".popup_open-image"),t=(document.querySelector(".popup__image-element"),document.querySelector(".popup__place-title"),document.querySelectorAll(".popup"),document.querySelector(".profile__add")),n=document.querySelector(".popup_add-card"),r=document.querySelector(".profile__edit"),o=document.querySelector(".popup_profile"),i=(document.querySelector(".popup__input_name"),document.querySelector(".profile__title")),u=(document.querySelector(".popup__input_about"),document.querySelector(".profile__subtitle")),c=(document.querySelector(".popup__form_profile"),document.querySelector(".popup__input_place"),document.querySelector(".popup__input_link"),document.querySelector(".popup__form_new-card"),document.querySelector(".elements__list")),a=document.querySelector(".popup_new-avatar"),s=document.querySelector(".profile__avatar-overlay"),l=document.querySelector(".profile__avatar"),f=document.querySelector(".popup_confirm"),p=(document.querySelector(".popup__form_new-avatar"),{}),d={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inputErrorClass:"popup__input_type_error",errorVisibleClass:"popup__error-visible",host:"https://mesto.nomoreparties.co/v1/cohort-47",token:"f085916c-6915-4c31-bcde-3cb49b2623b6"};function h(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var _=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._host=t,this._token=n,this._getJsonOrError=this._getJsonOrError.bind(this),this._getHeaders=this._getHeaders.bind(this)}var t,n;return t=e,(n=[{key:"_getHeaders",value:function(){return{authorization:this._token,"content-type":"application/json"}}},{key:"_getJsonOrError",value:function(e){if(e.ok)return e.json();throw new Error("Ошибка: ".concat(e.status))}},{key:"getUserInfo",value:function(){return fetch("".concat(this._host,"/users/me"),{headers:this._getHeaders()}).then(this._getJsonOrError)}},{key:"setProfileInfo",value:function(e){return fetch("".concat(this._host,"/users/me"),{method:"PATCH",headers:this._getHeaders(),body:JSON.stringify({name:e.name,about:e.about})}).then(this._getJsonOrError)}},{key:"addNewAvatar",value:function(e){return fetch("".concat(this._host,"/users/me/avatar"),{method:"PATCH",headers:this._getHeaders(),body:JSON.stringify({avatar:e.avatar})}).then(this._getJsonOrError)}},{key:"getCards",value:function(){return fetch("".concat(this._host,"/cards"),{headers:this._getHeaders()}).then(this._getJsonOrError)}},{key:"addCard",value:function(e){return fetch("".concat(this._host,"/cards"),{method:"POST",headers:this._getHeaders(),body:JSON.stringify(e)}).then(this._getJsonOrError)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._host,"/cards/").concat(e._id),{method:"DELETE",headers:this._getHeaders()}).then(this._getJsonOrError)}},{key:"putLike",value:function(e){return fetch("".concat(this._host,"/cards/").concat(e._id,"/likes"),{method:"PUT",headers:this._getHeaders()}).then(this._getJsonOrError)}},{key:"removeLike",value:function(e){return fetch("".concat(this._host,"/cards/").concat(e._id,"/likes"),{method:"DELETE",headers:this._getHeaders()}).then(this._getJsonOrError)}}])&&h(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var m=function(){function e(t,n,r,o){var i=o.userId,u=o.handleAddLike,c=o.handleRemoveLike,a=o.handleDeletingSubmit;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t.name,this._link=t.link,this._id=i,this._likes=t.likes,this._cardOwnerId=t.owner._id,this._handleAddLike=u,this._handleRemoveLike=c,this._cardSelector=n,this._handleCardClick=r,this._handleDeletingSubmit=a}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0)}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._imageElement=this._element.querySelector(".element__image"),this._titleImageElement=this._element.querySelector(".element__title"),this._cardDeleteButton=this._element.querySelector(".element__delete"),this._cardLikeButton=this._element.querySelector(".element__like"),this._likeAmount=this._element.querySelector(".element__like-amount"),this._cardImage=this._element.querySelector(".element__image"),this._imageElement.src=this._link,this._imageElement.alt=this._name,this._titleImageElement.textContent=this._name,this._id===this._cardOwnerId&&this._cardDeleteButton.classList.add("element__delete_visible"),this.sumUpLikes(this._likes),this._handleLikeClick(),this._setEventListeners(),this._element}},{key:"sumUpLikes",value:function(e){this._likeAmount.textContent=e.length}},{key:"_handleLikeClick",value:function(){var e=this;this._likes.forEach((function(t){e._id===t._id&&e._cardLikeButton.classList.toggle("element__like_active")}))}},{key:"likeAdded",value:function(){this._cardLikeButton.classList.add("element__like_active")}},{key:"likeCanceled",value:function(){this._cardLikeButton.classList.remove("element__like_active")}},{key:"delete",value:function(){this._element.remove(),this._element=null}},{key:"_setEventListeners",value:function(){var e=this;this._cardImage.addEventListener("click",(function(){e._handleCardClick(e._name,e._link)})),this._cardDeleteButton.addEventListener("click",(function(){e._handleDeletingSubmit(e)})),this._cardLikeButton.addEventListener("click",(function(){e._cardLikeButton.classList.contains("element__like_active")?e._handleRemoveLike():e._handleAddLike()}))}}])&&y(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var b=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formElement=t,this._config=n,this._inputList=Array.from(t.querySelectorAll(this._config.inputSelector)),this._submitButtonElement=t.querySelector(this._config.submitButtonSelector)}var t,n;return t=e,(n=[{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._config.inputErrorClass),t.classList.remove(this._config.errorVisibleClass),t.textContent=""}},{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(this._config.inputErrorClass),n.textContent=t,n.classList.add(this._config.errorVisibleClass)}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?this._submitButtonElement.disabled=!0:this._submitButtonElement.disabled=!1}},{key:"disabledSubmitButton",value:function(){this._submitButtonElement.disabled=!0}},{key:"_setEventListeners",value:function(){var e=this;this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"resetValidation",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){e._hideInputError(t)}))}},{key:"enableValidation",value:function(){this._setEventListeners()}}])&&v(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function g(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var k=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=n}var t,n;return t=e,(n=[{key:"setItems",value:function(e){this._renderedItems=e}},{key:"addItem",value:function(e){this._container.prepend(e)}},{key:"renderItem",value:function(){var e=this;this._renderedItems.forEach((function(t){e._renderer(t)}))}}])&&g(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var S=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=t,this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("mousedown",(function(t){(t.target.classList.contains("popup_opened")||t.target.classList.contains("popup__close"))&&e.close()}))}}])&&w(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function E(e){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},E(e)}function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function L(){return L="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=j(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},L.apply(this,arguments)}function j(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=P(e)););return e}function C(e,t){return C=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},C(e,t)}function I(e,t){if(t&&("object"===E(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function P(e){return P=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},P(e)}var q=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&C(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=P(r);if(o){var n=P(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return I(this,e)});function u(e,t){var n,r=t.submitForm;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,e))._form=n._popup.querySelector(".popup__form"),n._inputs=n._form.querySelectorAll(".popup__input"),n._submitForm=r,n._cardSubmitButton=n._popup.querySelector(".popup__button"),n._cardSubmitButtonContent=n._cardSubmitButton.textContent,n}return t=u,(n=[{key:"_getInputValues",value:function(){var e={};return this._inputs.forEach((function(t){e[t.name]=t.value})),e}},{key:"setInputValues",value:function(e){this._inputs.forEach((function(t){t.value=e[t.name]}))}},{key:"downloadInfo",value:function(e,t){var n=this;e?(this._cardSubmitButton.disabled=!0,this._cardSubmitButton.textContent=t):setTimeout((function(){n._cardSubmitButton.disabled=!1,n._cardSubmitButton.textContent=n._cardSubmitButtonContent}),600)}},{key:"setEventListeners",value:function(){var e=this;L(P(u.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._submitForm(e._getInputValues())}))}},{key:"close",value:function(){L(P(u.prototype),"close",this).call(this),this._form.reset()}}])&&O(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(S);function A(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var B=function(){function e(t){var n=t.userName,r=t.userAbout,o=t.userAvatar;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=n,this._about=r,this._avatar=o}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,about:this._about.textContent,avatar:this._avatar.src}}},{key:"setUserInfo",value:function(e){this._name.textContent=e.name,this._about.textContent=e.about,this._avatar.src=e.avatar}}])&&A(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function R(e){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},R(e)}function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function x(){return x="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=D(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},x.apply(this,arguments)}function D(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=U(e)););return e}function V(e,t){return V=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},V(e,t)}function J(e,t){if(t&&("object"===R(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function U(e){return U=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},U(e)}var H=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&V(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=U(r);if(o){var n=U(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return J(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e))._name=t._popup.querySelector(".popup__place-title"),t._link=t._popup.querySelector(".popup__image-element"),t}return t=u,(n=[{key:"open",value:function(e,t){this._link.src=t,this._link.alt=e,this._name.textContent=e,x(U(u.prototype),"open",this).call(this)}}])&&T(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(S);function F(e){return F="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},F(e)}function N(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function M(){return M="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=z(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},M.apply(this,arguments)}function z(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=K(e)););return e}function $(e,t){return $=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},$(e,t)}function G(e,t){if(t&&("object"===F(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function K(e){return K=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},K(e)}var Q,W=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&$(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=K(r);if(o){var n=K(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return G(this,e)});function u(e,t){var n,r=t.submitForm;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,e))._form=n._popup.querySelector(".popup__form"),n._submitForm=r,n}return t=u,(n=[{key:"setSubmitAction",value:function(e){var t=e.handleSubmitAction;this.submitAction=t}},{key:"open",value:function(e){M(K(u.prototype),"open",this).call(this),this._card=e}},{key:"setEventListeners",value:function(){var e=this;M(K(u.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._submitForm(e._card)}))}}])&&N(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(S);function X(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var Y=new _(d.host,d.token);Promise.all([Y.getUserInfo(),Y.getCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],u=!0,c=!1;try{for(n=n.call(e);!(u=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);u=!0);}catch(e){c=!0,o=e}finally{try{u||null==n.return||n.return()}finally{if(c)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return X(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?X(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];Q=o._id,Z.setUserInfo(o),re.setItems(i),re.renderItem(i)})).catch((function(e){return console.log("Ошибка: ".concat(e))}));var Z=new B({userName:i,userAbout:u,userAvatar:l}),ee=new q(o,{submitForm:function(e){ee.downloadInfo(!0,"Сохранение..."),Y.setProfileInfo(e).then((function(e){Z.setUserInfo(e),ee.close()})).catch((function(e){return console.log("Ошибка: ".concat(e))})).finally((function(){return ee.downloadInfo(!1)}))}});ee.setEventListeners(),r.addEventListener("click",(function(){ee.open();var e=Z.getUserInfo();ee.setInputValues(e),p["profile-edit"].resetValidation(),p["profile-edit"].disabledSubmitButton()}));var te=new q(a,{submitForm:function(e){te.downloadInfo(!0,"Сохранение..."),Y.addNewAvatar(e).then((function(e){Z.setUserInfo(e),te.close()})).catch((function(e){return console.log("Ошибка: ".concat(e))})).finally((function(){return te.downloadInfo(!1)}))}});te.setEventListeners(),s.addEventListener("click",(function(){te.open(),p["new-avatar"].resetValidation()}));var ne=function(e){var t=new m(e,".element-template",ce,{userId:Q,handleDeletingSubmit:function(){ie.open(e),ie.setSubmitAction({handleSubmitAction:function(){Y.deleteCard(e).then((function(){ie.close(),t.delete()})).catch((function(e){return console.log("Ошибка: ".concat(e))}))}})},handleAddLike:function(){Y.putLike(e).then((function(e){t.sumUpLikes(e.likes),t.likeAdded()})).catch((function(e){return console.log("Ошибка: ".concat(e))}))},handleRemoveLike:function(){Y.removeLike(e).then((function(e){t.sumUpLikes(e.likes),t.likeCanceled()})).catch((function(e){return console.log("Ошибка: ".concat(e))}))}});return t.generateCard()},re=new k({renderer:function(e){var t=ne(e);re.addItem(t)}},c),oe=new q(n,{submitForm:function(e){oe.downloadInfo(!0,"Сохранение..."),Y.addCard(e).then((function(e){var t=ne(e);re.addItem(t),oe.close()})).catch((function(e){return console.log("Ошибка: ".concat(e))})).finally((function(){return oe.downloadInfo(!1)}))}});oe.setEventListeners(),t.addEventListener("click",(function(){oe.open(),p["add-card"].resetValidation()}));var ie=new W(f,{submitForm:function(){return ie.submitAction()}});ie.setEventListeners();var ue=new H(e);ue.setEventListeners();var ce=function(e,t){ue.open(e,t)};!function(e){Array.from(document.querySelectorAll(e.formSelector)).forEach((function(t){var n=new b(t,e),r=t.getAttribute("name");p[r]=n,n.enableValidation()}))}(d)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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bEcsU0FBU0csaUJBQWlCWSxFQUFPQyxlQUNwRHNFLFNBQVEsU0FBQ08sR0FDaEIsSUFBTTJHLEVBQVksSUFBSTVHLEVBQWNDLEVBQWE5RSxHQUMzQzBMLEVBQVc1RyxFQUFZNkcsYUFBYSxRQUMxQzVMLEVBQWUyTCxHQUFZRCxFQUMzQkEsRUFBVUcsa0JBQ1YsR0FDRixDQUVEQSxDQUFpQjVMLEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXN0by8uL3NyYy91dGlscy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9BcGkuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9DYXJkLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Vc2VySW5mby5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL3BhZ2VzL2luZGV4LmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBGb3JDb25maXJtLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBwb3B1cEltYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX29wZW4taW1hZ2UnKTtcclxuZXhwb3J0IGNvbnN0IGltYWdlRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9faW1hZ2UtZWxlbWVudCcpO1xyXG5leHBvcnQgY29uc3QgY2FwdGlvbkVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX3BsYWNlLXRpdGxlJyk7XHJcbmV4cG9ydCBjb25zdCBhbGxQb3B1cHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcucG9wdXAnKTtcclxuZXhwb3J0IGNvbnN0IGFkZENhcmRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fYWRkJyk7XHJcbmV4cG9ydCBjb25zdCBwb3B1cEFkZENhcmQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfYWRkLWNhcmQnKTtcclxuZXhwb3J0IGNvbnN0IHByb2ZpbGVFZGl0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2VkaXQnKTtcclxuZXhwb3J0IGNvbnN0IHBvcHVwUHJvZmlsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9wcm9maWxlJyk7XHJcbmV4cG9ydCBjb25zdCBuYW1lRmllbGQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2lucHV0X25hbWUnKTtcclxuZXhwb3J0IGNvbnN0IHByb2ZpbGVUaXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX190aXRsZScpO1xyXG5leHBvcnQgY29uc3QgYWJvdXRGaWVsZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9faW5wdXRfYWJvdXQnKTtcclxuZXhwb3J0IGNvbnN0IHByb2ZpbGVTdWJ0aXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19zdWJ0aXRsZScpO1xyXG5leHBvcnQgY29uc3QgZm9ybUVsZW1lbnRQcm9maWxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX19mb3JtX3Byb2ZpbGUnKTtcclxuZXhwb3J0IGNvbnN0IHBsYWNlRmllbGQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2lucHV0X3BsYWNlJyk7XHJcbmV4cG9ydCBjb25zdCBsaW5rRmllbGQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2lucHV0X2xpbmsnKTtcclxuZXhwb3J0IGNvbnN0IGZvcm1FbGVtZW50Q2FyZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fZm9ybV9uZXctY2FyZCcpO1xyXG5leHBvcnQgY29uc3QgY2FyZHNMaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRzX19saXN0Jyk7XHJcbmV4cG9ydCBjb25zdCBwb3B1cEF2YXRhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9uZXctYXZhdGFyJyk7XHJcbmV4cG9ydCBjb25zdCBuZXdBdmF0YXJCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fYXZhdGFyLW92ZXJsYXknKTtcclxuZXhwb3J0IGNvbnN0IHByb2ZpbGVBdmF0YXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fYXZhdGFyJyk7XHJcbmV4cG9ydCBjb25zdCBwb3B1cENvbmZpcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfY29uZmlybScpO1xyXG5leHBvcnQgY29uc3QgcG9wdXBBdmF0YXJGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX19mb3JtX25ldy1hdmF0YXInKTtcclxuZXhwb3J0IGNvbnN0IGZvcm1WYWxpZGF0b3JzID0ge307XHJcbmV4cG9ydCBjb25zdCBjb25maWcgPSB7XHJcbiAgZm9ybVNlbGVjdG9yOiAnLnBvcHVwX19mb3JtJyxcclxuICBpbnB1dFNlbGVjdG9yOiAnLnBvcHVwX19pbnB1dCcsXHJcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6ICcucG9wdXBfX2J1dHRvbicsXHJcbiAgaW5wdXRFcnJvckNsYXNzOiAncG9wdXBfX2lucHV0X3R5cGVfZXJyb3InLFxyXG4gIGVycm9yVmlzaWJsZUNsYXNzOiAncG9wdXBfX2Vycm9yLXZpc2libGUnLFxyXG4gIGhvc3Q6ICdodHRwczovL21lc3RvLm5vbW9yZXBhcnRpZXMuY28vdjEvY29ob3J0LTQ3JyxcclxuICB0b2tlbjogJ2YwODU5MTZjLTY5MTUtNGMzMS1iY2RlLTNjYjQ5YjI2MjNiNicsXHJcbn07IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBpIHtcclxuICBjb25zdHJ1Y3Rvcihob3N0LCB0b2tlbikge1xyXG4gICAgdGhpcy5faG9zdCA9IGhvc3Q7XHJcbiAgICB0aGlzLl90b2tlbiA9IHRva2VuO1xyXG4gICAgdGhpcy5fZ2V0SnNvbk9yRXJyb3IgPSB0aGlzLl9nZXRKc29uT3JFcnJvci5iaW5kKHRoaXMpO1xyXG4gICAgdGhpcy5fZ2V0SGVhZGVycyA9IHRoaXMuX2dldEhlYWRlcnMuYmluZCh0aGlzKTtcclxuICB9XHJcblxyXG4gIC8v0J/QvtC70YPRh9C10L3QuNC1IEhlYWRlcnMg0LTQu9GPINGA0LDQt9C70LjRh9C90YvRhSDQvNC10YLQvtC00L7QslxyXG4gIF9nZXRIZWFkZXJzKCkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgYXV0aG9yaXphdGlvbjogdGhpcy5fdG9rZW4sXHJcbiAgICAgICdjb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvL9Ce0YLQstC10YIg0LIg0L/RgNC+0LzQuNGB0LDRhSDRgNCw0LfQu9C40YfQvdGL0YUg0LzQtdGC0L7QtNC+0LIg0LIg0LfQsNCy0LjRgdC40LzQvtGB0YLQuCDQvtGCINC90LDQu9C40YfQuNGPINC+0YjQuNCx0LrQuFxyXG4gIF9nZXRKc29uT3JFcnJvcihyZXMpIHtcclxuICAgIGlmIChyZXMub2spIHtcclxuICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XHJcbiAgICB9XHJcblxyXG4gICAgdGhyb3cgbmV3IEVycm9yKGDQntGI0LjQsdC60LA6ICR7cmVzLnN0YXR1c31gKTtcclxuICB9XHJcblxyXG4gIC8v0JzQtdGC0L7QtCwg0LrQvtGC0L7RgNGL0Lkg0LLQtdGA0L3QtdGCINC40L3RhNC+0YDQvNCw0YbQuNGOINC+INC/0L7Qu9GM0LfQvtCy0LDRgtC10LvQtVxyXG4gIGdldFVzZXJJbmZvKCl7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5faG9zdH0vdXNlcnMvbWVgLCB7XHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2dldEhlYWRlcnMoKSxcclxuICAgIH0pXHJcbiAgICAudGhlbih0aGlzLl9nZXRKc29uT3JFcnJvcilcclxuICB9XHJcblxyXG4gIC8v0JzQtdGC0L7QtCwg0LrQvtGC0L7RgNGL0Lkg0YHQvtGF0YDQsNC90LjRgiDQuNC30LzQtdC90LXQvdC90YvQtSDQtNCw0L3QvdGL0LUg0L4g0L/QvtC70YzQt9C+0LLQsNGC0LXQu9C1XHJcbiAgc2V0UHJvZmlsZUluZm8oZGF0YSl7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5faG9zdH0vdXNlcnMvbWVgLCB7XHJcbiAgICAgIG1ldGhvZDogJ1BBVENIJyxcclxuICAgICAgaGVhZGVyczogdGhpcy5fZ2V0SGVhZGVycygpLFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgbmFtZTogZGF0YS5uYW1lLFxyXG4gICAgICAgIGFib3V0OiBkYXRhLmFib3V0LFxyXG4gICAgICB9KSxcclxuICAgIH0pXHJcbiAgICAudGhlbih0aGlzLl9nZXRKc29uT3JFcnJvcilcclxuICB9XHJcblxyXG4gIC8v0JzQtdGC0L7QtCwg0LrQvtGC0L7RgNGL0Lkg0YHQvtGF0YDQsNC90LjRgiDQuNC30LzQtdC90LXQvdC90YvQtSDQtNCw0L3QvdGL0LUg0L4g0L/QvtC70YzQt9C+0LLQsNGC0LXQu9C1XHJcbiAgYWRkTmV3QXZhdGFyKGRhdGEpe1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2hvc3R9L3VzZXJzL21lL2F2YXRhcmAsIHtcclxuICAgICAgbWV0aG9kOiAnUEFUQ0gnLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9nZXRIZWFkZXJzKCksXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICBhdmF0YXI6IGRhdGEuYXZhdGFyLFxyXG4gICAgICB9KSxcclxuICAgIH0pXHJcbiAgICAudGhlbih0aGlzLl9nZXRKc29uT3JFcnJvcilcclxuICB9XHJcblxyXG4gIC8v0JzQtdGC0L7QtCwg0LrQvtGC0L7RgNGL0Lkg0LLQtdGA0L3QtdGCINC60LDRgNGC0L7Rh9C60LhcclxuICBnZXRDYXJkcygpe1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2hvc3R9L2NhcmRzYCwge1xyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9nZXRIZWFkZXJzKCksXHJcbiAgICB9KVxyXG4gICAgLnRoZW4odGhpcy5fZ2V0SnNvbk9yRXJyb3IpXHJcbiAgfVxyXG5cclxuICAvL9Cc0LXRgtC+0LQsINC00L7QsdCw0LLQu9GP0Y7RidC40Lkg0LrQsNGA0YLQvtGH0LrQuFxyXG4gIGFkZENhcmQobmFtZSkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2hvc3R9L2NhcmRzYCwge1xyXG4gICAgICBtZXRob2Q6ICdQT1NUJyxcclxuICAgICAgaGVhZGVyczogdGhpcy5fZ2V0SGVhZGVycygpLFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSgobmFtZSkpLFxyXG4gICAgfSlcclxuICAgIC50aGVuKHRoaXMuX2dldEpzb25PckVycm9yKVxyXG4gIH1cclxuXHJcbiAgLy/QnNC10YLQvtC0LCDRg9C00LDQu9GP0Y7RidC40Lkg0LrQsNGA0YLQvtGH0LrQuFxyXG4gIGRlbGV0ZUNhcmQoZGF0YSkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2hvc3R9L2NhcmRzLyR7ZGF0YS5faWR9YCwge1xyXG4gICAgICBtZXRob2Q6ICdERUxFVEUnLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9nZXRIZWFkZXJzKCksXHJcbiAgICB9KVxyXG4gICAgLnRoZW4odGhpcy5fZ2V0SnNvbk9yRXJyb3IpXHJcbiAgfVxyXG5cclxuICAgIC8v0JzQtdGC0L7QtCwg0YHQvtCx0LjRgNCw0Y7RidC40Lkg0LvQsNC50LrQuFxyXG4gIHB1dExpa2UoZGF0YSkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2hvc3R9L2NhcmRzLyR7ZGF0YS5faWR9L2xpa2VzYCwge1xyXG4gICAgICBtZXRob2Q6ICdQVVQnLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9nZXRIZWFkZXJzKCksXHJcbiAgICB9KVxyXG4gICAgLnRoZW4odGhpcy5fZ2V0SnNvbk9yRXJyb3IpXHJcbiAgfVxyXG5cclxuICAgIC8v0JzQtdGC0L7QtCwg0YPQtNCw0LvRj9GO0YnQuNC5INC70LDQudC6XHJcbiAgcmVtb3ZlTGlrZShkYXRhKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5faG9zdH0vY2FyZHMvJHtkYXRhLl9pZH0vbGlrZXNgLCB7XHJcbiAgICAgIG1ldGhvZDogJ0RFTEVURScsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2dldEhlYWRlcnMoKSxcclxuICAgIH0pXHJcbiAgICAudGhlbih0aGlzLl9nZXRKc29uT3JFcnJvcilcclxuICB9XHJcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBDYXJkIHtcclxuICBjb25zdHJ1Y3RvcihkYXRhLCBjYXJkU2VsZWN0b3IsIGhhbmRsZUNhcmRDbGljaywgeyB1c2VySWQsIGhhbmRsZUFkZExpa2UsIGhhbmRsZVJlbW92ZUxpa2UsIGhhbmRsZURlbGV0aW5nU3VibWl0IH0pIHtcclxuICAgIHRoaXMuX25hbWUgPSBkYXRhLm5hbWU7XHJcbiAgICB0aGlzLl9saW5rID0gZGF0YS5saW5rO1xyXG4gICAgdGhpcy5faWQgPSB1c2VySWQ7XHJcbiAgICB0aGlzLl9saWtlcyA9IGRhdGEubGlrZXM7XHJcbiAgICB0aGlzLl9jYXJkT3duZXJJZCA9IGRhdGEub3duZXIuX2lkO1xyXG4gICAgdGhpcy5faGFuZGxlQWRkTGlrZSA9IGhhbmRsZUFkZExpa2U7XHJcbiAgICB0aGlzLl9oYW5kbGVSZW1vdmVMaWtlID0gaGFuZGxlUmVtb3ZlTGlrZTtcclxuICAgIHRoaXMuX2NhcmRTZWxlY3RvciA9IGNhcmRTZWxlY3RvcjtcclxuICAgIHRoaXMuX2hhbmRsZUNhcmRDbGljayA9IGhhbmRsZUNhcmRDbGljaztcclxuICAgIHRoaXMuX2hhbmRsZURlbGV0aW5nU3VibWl0ID0gaGFuZGxlRGVsZXRpbmdTdWJtaXQ7XHJcbiAgfVxyXG4gIFxyXG4gIC8v0KTRg9C90LrRhtC40Y8sINGH0YLQvtCx0Ysg0LLQvtC30LLRgNCw0YnQsNGC0Ywg0YDQsNC30LzQtdGC0LrRgyDQuCDQutC70L7QvdC40YDQvtCy0LDRgtGMINGN0LvQtdC80LXQvdGCXHJcbiAgX2dldFRlbXBsYXRlKCkge1xyXG4gICAgY29uc3QgY2FyZEVsZW1lbnQgPSBkb2N1bWVudFxyXG4gICAgLnF1ZXJ5U2VsZWN0b3IodGhpcy5fY2FyZFNlbGVjdG9yKVxyXG4gICAgLmNvbnRlbnRcclxuICAgIC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudCcpXHJcbiAgICAuY2xvbmVOb2RlKHRydWUpO1xyXG5cclxuICByZXR1cm4gY2FyZEVsZW1lbnQ7XHJcbiAgfVxyXG5cclxuICAvL9Ck0YPQvdC60YbQuNGPLCDQutC+0YLQvtGA0LDRjyDQv9C+0LTQs9C+0YLQvtCy0LjRgiDQutCw0YDRgtC+0YfQutGDINC6INC/0YPQsdC70LjQutCw0YbQuNC4XHJcbiAgZ2VuZXJhdGVDYXJkKCkge1xyXG4gICAgLy/Ql9Cw0L/QuNGB0Ywg0YDQsNC30LzQtdGC0LrQuCDQsiDQv9C+0LvQtSBlbGVtZW50LCDRh9GC0L7QsdGLINGDINC00YDRg9Cz0LjRhSDRjdC70LXQvNC10L3RgtC+0LIg0L/QvtGP0LLQuNC70YHRjyDQtNC+0YHRgtGD0L8g0Log0L3QtdC5XHJcbiAgICB0aGlzLl9lbGVtZW50ID0gdGhpcy5fZ2V0VGVtcGxhdGUoKTtcclxuXHJcbiAgICB0aGlzLl9pbWFnZUVsZW1lbnQgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X19pbWFnZScpXHJcbiAgICB0aGlzLl90aXRsZUltYWdlRWxlbWVudCA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX3RpdGxlJylcclxuICAgIHRoaXMuX2NhcmREZWxldGVCdXR0b24gPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X19kZWxldGUnKTtcclxuICAgIHRoaXMuX2NhcmRMaWtlQnV0dG9uID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9fbGlrZScpO1xyXG4gICAgdGhpcy5fbGlrZUFtb3VudCA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX2xpa2UtYW1vdW50JylcclxuICAgIHRoaXMuX2NhcmRJbWFnZSA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX2ltYWdlJyk7XHJcblxyXG4gICAgdGhpcy5faW1hZ2VFbGVtZW50LnNyYyA9IHRoaXMuX2xpbms7XHJcbiAgICB0aGlzLl9pbWFnZUVsZW1lbnQuYWx0ID0gdGhpcy5fbmFtZTtcclxuICAgIHRoaXMuX3RpdGxlSW1hZ2VFbGVtZW50LnRleHRDb250ZW50ID0gdGhpcy5fbmFtZTtcclxuXHJcbiAgICBpZiAodGhpcy5faWQgPT09IHRoaXMuX2NhcmRPd25lcklkKSB7XHJcbiAgICAgIHRoaXMuX2NhcmREZWxldGVCdXR0b24uY2xhc3NMaXN0LmFkZCgnZWxlbWVudF9fZGVsZXRlX3Zpc2libGUnKTtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLnN1bVVwTGlrZXModGhpcy5fbGlrZXMpO1xyXG4gICAgdGhpcy5faGFuZGxlTGlrZUNsaWNrKCk7XHJcblxyXG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbiAgICByZXR1cm4gdGhpcy5fZWxlbWVudDtcclxuICB9XHJcblxyXG4gIC8v0JzQtdGC0L7QtNGLINC00LvRjyDQv9C+0YHRgtCw0L3QvtCy0LrQuC/RgdC90Y/RgtC40Y8g0LvQsNC50LrQvtCyXHJcbiAgc3VtVXBMaWtlcyhsaWtlcykge1xyXG4gICAgICB0aGlzLl9saWtlQW1vdW50LnRleHRDb250ZW50ID0gbGlrZXMubGVuZ3RoO1xyXG4gIH1cclxuXHJcbiAgX2hhbmRsZUxpa2VDbGljaygpIHtcclxuICAgIHRoaXMuX2xpa2VzLmZvckVhY2goKGxpa2UpID0+IHtcclxuICAgICAgaWYgKHRoaXMuX2lkID09PSBsaWtlLl9pZCkge1xyXG4gICAgICAgIHRoaXMuX2NhcmRMaWtlQnV0dG9uLmNsYXNzTGlzdC50b2dnbGUoJ2VsZW1lbnRfX2xpa2VfYWN0aXZlJylcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBsaWtlQWRkZWQoKSB7XHJcbiAgICB0aGlzLl9jYXJkTGlrZUJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdlbGVtZW50X19saWtlX2FjdGl2ZScpO1xyXG4gIH1cclxuXHJcbiAgbGlrZUNhbmNlbGVkKCkge1xyXG4gICAgdGhpcy5fY2FyZExpa2VCdXR0b24uY2xhc3NMaXN0LnJlbW92ZSgnZWxlbWVudF9fbGlrZV9hY3RpdmUnKTtcclxuICB9XHJcblxyXG4gIC8v0JzQtdGC0L7QtCDQtNC70Y8g0YPQtNCw0LvQtdC90LjRjyDQutCw0YDRgtC+0YfQutC4XHJcbiAgZGVsZXRlKCkge1xyXG4gICAgdGhpcy5fZWxlbWVudC5yZW1vdmUoKTtcclxuICAgIHRoaXMuX2VsZW1lbnQgPSBudWxsO1xyXG4gIH1cclxuXHJcbiAgLy9cItCh0LvRg9GI0LDRgtC10LvQuFwiINGB0L7QsdGL0YLQuNC5INC00LvRjyDQu9Cw0LnQutCwLCDRg9C00LDQu9C10L3QuNGPINC4INC+0YLQutGA0YvRgtC40Y8g0LjQt9C+0LHRgNCw0LbQtdC90LjRj1xyXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX2NhcmRJbWFnZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgICAgdGhpcy5faGFuZGxlQ2FyZENsaWNrKHRoaXMuX25hbWUsIHRoaXMuX2xpbmspO1xyXG4gICAgICB9KTsgXHJcblxyXG4gICAgdGhpcy5fY2FyZERlbGV0ZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgICAgdGhpcy5faGFuZGxlRGVsZXRpbmdTdWJtaXQodGhpcyk7XHJcbiAgICB9KTtcclxuXHJcbiAgICB0aGlzLl9jYXJkTGlrZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgICAgaWYgKHRoaXMuX2NhcmRMaWtlQnV0dG9uLmNsYXNzTGlzdC5jb250YWlucygnZWxlbWVudF9fbGlrZV9hY3RpdmUnKSkge1xyXG4gICAgICAgIHRoaXMuX2hhbmRsZVJlbW92ZUxpa2UoKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB0aGlzLl9oYW5kbGVBZGRMaWtlKCk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEZvcm1WYWxpZGF0b3Ige1xyXG4gIGNvbnN0cnVjdG9yKGZvcm1FbGVtZW50LCBjb25maWcpIHtcclxuICAgIHRoaXMuX2Zvcm1FbGVtZW50ID0gZm9ybUVsZW1lbnQ7XHJcbiAgICB0aGlzLl9jb25maWcgPSBjb25maWc7XHJcbiAgICB0aGlzLl9pbnB1dExpc3QgPSBBcnJheS5mcm9tKGZvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5fY29uZmlnLmlucHV0U2VsZWN0b3IpKTtcclxuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbkVsZW1lbnQgPSBmb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX2NvbmZpZy5zdWJtaXRCdXR0b25TZWxlY3Rvcik7XHJcbiAgfVxyXG5cclxuICAvL9Cc0LXRgtC+0LQsINGB0LrRgNGL0LLQsNGO0YnQuNC5INC+0YjQuNCx0LrRg1xyXG4gIF9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpIHtcclxuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTtcclxuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2NvbmZpZy5pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fY29uZmlnLmVycm9yVmlzaWJsZUNsYXNzKTtcclxuICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9ICcnO1xyXG4gIH1cclxuXHJcbiAgLy/QntGC0L7QsdGA0LDQttC10L3QuNC1INC+0YjQuNCx0LrQuFxyXG4gIF9zaG93SW5wdXRFcnJvcihpbnB1dEVsZW1lbnQsIGVycm9yTWVzc2FnZSkge1xyXG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgIyR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xyXG4gICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fY29uZmlnLmlucHV0RXJyb3JDbGFzcyk7XHJcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBlcnJvck1lc3NhZ2U7XHJcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9jb25maWcuZXJyb3JWaXNpYmxlQ2xhc3MpO1xyXG4gIH1cclxuXHJcbiAgLy/Qn9GA0L7QstC10YDQutCwINCy0LDQu9C40LTQvdC+0YHRgtC4INC/0L7Qu9GPLCDRh9GC0L7QsdGLINC/0L7QutCw0LfQsNGC0Ywg0LjQu9C4INGB0LrRgNGL0YLRjCDQvtGI0LjQsdC60YNcclxuICBfY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWxlbWVudCkge1xyXG4gICAgaWYgKCFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpIHtcclxuICAgICAgdGhpcy5fc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50LCBpbnB1dEVsZW1lbnQudmFsaWRhdGlvbk1lc3NhZ2UpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8v0J/RgNC+0LLQtdGA0LrQsCwg0L3QtdGCINC70Lgg0L/QvtC70LXQuSDRgSDQvdC10LrQvtGA0YDQtdC60YLQvdGL0LzQuCDQtNCw0L3QvdGL0LzQuFxyXG4gIF9oYXNJbnZhbGlkSW5wdXQoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5faW5wdXRMaXN0LnNvbWUoKGlucHV0RWxlbWVudCkgPT4ge1xyXG4gICAgICByZXR1cm4gIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZDtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgLy/QnNC10YLQvtC0LCDQv9C+0LfQstC+0LvRj9GO0YnQuNC5INC40LfQvNC10L3QuNGC0Ywg0LrQvdC+0L/QutGDICjQsNC60YLQuNCy0L3QsNGPINC40LvQuCDQvdC10LDQutGC0LjQstC90LDRjylcclxuICBfdG9nZ2xlQnV0dG9uU3RhdGUoKSB7XHJcbiAgICBpZiAodGhpcy5faGFzSW52YWxpZElucHV0KCkpIHtcclxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uRWxlbWVudC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b25FbGVtZW50LmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvL9Cd0LXQsNC60YLQuNCy0L3QvtGB0YLRjCDQutC90L7Qv9C60Lgg0L/RgNC4INC+0YLQutGA0YvRgtC40Lgg0L/QvtC/0LDQv9CwINGA0LXQtNCw0LrRgtC40YDQvtCy0LDQvdC40Y8g0L/RgNC+0YTQuNC70Y9cclxuICBkaXNhYmxlZFN1Ym1pdEJ1dHRvbigpIHtcclxuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbkVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlO1xyXG4gIH1cclxuICBcclxuICAvL9CU0L7QsdCw0LLQu9C10L3QuNC1IFwi0YHQu9GD0YjQsNGC0LXQu9C10LlcIiDQvdCwINCy0YHQtSDQv9C+0LvRjyDQuCDQutC90L7Qv9C60YMg0L/QvtC00YLQstC10YDQttC00LXQvdC40Y9cclxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XHJcbiAgICAgIGlucHV0RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsICgpID0+IHtcclxuICAgICAgICB0aGlzLl9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbGVtZW50KTtcclxuICAgICAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgICB9KTsgXHJcbiAgICB9KVxyXG4gIH1cclxuXHJcbiAgLy/QntGH0LjRgdGC0LrQsCDRhNC+0YDQvNGLINC+0YIg0L7RiNC40LHQvtC6XHJcbiAgcmVzZXRWYWxpZGF0aW9uKCkge1xyXG4gICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxuICAgIFxyXG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xyXG4gICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcclxuICAgIH0pXHJcbiAgfVxyXG5cclxuICBlbmFibGVWYWxpZGF0aW9uKCkge1xyXG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICB9XHJcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTZWN0aW9uIHtcclxuICAvL9Cf0YDQuNC90LjQvNCw0LXRgiDQsiDQutC+0L3RgdGC0YDRg9C60YLQvtGAINC80LDRgdGB0LjQsiDQtNCw0L3QvdGL0YUsINGE0YPQvdC60YbQuNGOINC+0YLRgNC40YHQvtCy0LrQuCDQtNCw0L3QvdGL0YUg0L3QsCDRgdGC0YDQsNC90LjRhtC1INC4INGB0LXQu9C10LrRgtC+0YAg0LrQvtC90YLQtdC50L3QtdGA0LAg0LTQu9GPINGN0LvQtdC80LXQvdGC0L7QslxyXG4gIGNvbnN0cnVjdG9yKHsgcmVuZGVyZXIgfSwgY2FyZHNMaXN0KSB7XHJcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xyXG4gICAgdGhpcy5fY29udGFpbmVyID0gY2FyZHNMaXN0O1xyXG4gIH1cclxuXHJcbiAgc2V0SXRlbXMoaXRlbXMpIHtcclxuICAgIHRoaXMuX3JlbmRlcmVkSXRlbXMgPSBpdGVtczsgXHJcbiAgfVxyXG5cclxuICBhZGRJdGVtKGl0ZW0pIHtcclxuICAgIC8v0JTQvtCx0LDQstC70Y/QtdC8IGl0ZW0g0LIg0LrQvtC90YLQtdC50L3QtdGAINC90LAg0YHRgtGA0LDQvdC40YbQtVxyXG4gICAgdGhpcy5fY29udGFpbmVyLnByZXBlbmQoaXRlbSk7XHJcbiAgfVxyXG5cclxuICAvL9Cf0LXRgNC10LHQtdGA0LXQvCDQvNCw0YHRgdC40LIg0LTQsNC90L3Ri9GFLCDQutC+0YLQvtGA0YvQtSDQtNC+0LHQsNCy0LvRj9GO0YLRgdGPINC90LAg0YHRgtGA0LDQvdC40YbRg1xyXG4gIHJlbmRlckl0ZW0oKSB7XHJcbiAgICB0aGlzLl9yZW5kZXJlZEl0ZW1zLmZvckVhY2goKGl0ZW0pID0+IHtcclxuICAgICAgdGhpcy5fcmVuZGVyZXIoaXRlbSk7XHJcbiAgICB9KTtcclxuICB9XHJcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cCB7XHJcbiAgLy/Qn9GA0LjQvdC40LzQsNC10YIg0LIg0LrQvtC90YHRgtGA0YPQutGC0L7RgCDRgdC10LvQtdC60YLQvtGAINC/0L7Qv9Cw0L/QsFxyXG4gIGNvbnN0cnVjdG9yKGFsbFBvcHVwcykge1xyXG4gICAgdGhpcy5fcG9wdXAgPSBhbGxQb3B1cHM7XHJcbiAgICB0aGlzLl9oYW5kbGVFc2NDbG9zZSA9IHRoaXMuX2hhbmRsZUVzY0Nsb3NlLmJpbmQodGhpcyk7XHJcbiAgfVxyXG4gIFxyXG4gIC8v0KTRg9C90LrRhtC40Y8g0LTQu9GPINC+0YLQutGA0YvRgtC40Y8g0L/QvtC/0LDQv9CwXHJcbiAgb3BlbigpIHtcclxuICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5hZGQoJ3BvcHVwX29wZW5lZCcpO1xyXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcclxuICB9O1xyXG5cclxuICAvL9Ck0YPQvdC60YbQuNGPINC00LvRjyDQt9Cw0LrRgNGL0YLQuNGPINC/0L7Qv9Cw0L/QsFxyXG4gIGNsb3NlKCkge1xyXG4gICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LnJlbW92ZSgncG9wdXBfb3BlbmVkJyk7XHJcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xyXG4gIH1cclxuXHJcbiAgLy/Ql9Cw0LrRgNGL0YLQuNC1INC/0L7Qv9Cw0L/QsCDRh9C10YDQtdC3IGVzY1xyXG4gIF9oYW5kbGVFc2NDbG9zZShldnQpIHtcclxuICAgIGlmIChldnQua2V5ID09PSAnRXNjYXBlJykge1xyXG4gICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvL9CX0LDQutGA0YvRgtC40LUg0L/QvtC/0LDQv9C+0LIg0LrQu9C40LrQvtC8INC90LAg0L7QstC10YDQu9C10Lkg0LggXCLQutGA0LXRgdGC0LjQulwiXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9wb3B1cC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCAoZXZ0KSA9PiB7XHJcbiAgICAgICAgaWYgKFxyXG4gICAgICAgICAgZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ3BvcHVwX29wZW5lZCcpIHx8XHJcbiAgICAgICAgICBldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygncG9wdXBfX2Nsb3NlJylcclxuICAgICAgICApIHtcclxuICAgICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gIH1cclxufSIsImltcG9ydCBQb3B1cCBmcm9tICcuLi9jb21wb25lbnRzL1BvcHVwLmpzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XHJcbiAgLy/Qn9GA0LjQvdC40LzQsNC10YIg0LIg0LrQvtC90YHRgtGA0YPQutGC0L7RgCDRgdC10LvQtdC60YLQvtGAINC/0L7Qv9Cw0L/QsCDQuCDQutC+0LvQsdGN0Log0YHQsNCx0LzQuNGC0LAg0YTQvtGA0LzRi1xyXG4gIGNvbnN0cnVjdG9yIChhbGxQb3B1cHMsIHsgc3VibWl0Rm9ybSB9KSB7XHJcbiAgICBzdXBlcihhbGxQb3B1cHMpO1xyXG4gICAgdGhpcy5fZm9ybSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fZm9ybScpO1xyXG4gICAgdGhpcy5faW5wdXRzID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yQWxsKCcucG9wdXBfX2lucHV0Jyk7XHJcbiAgICB0aGlzLl9zdWJtaXRGb3JtID0gc3VibWl0Rm9ybTtcclxuICAgIHRoaXMuX2NhcmRTdWJtaXRCdXR0b24gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2J1dHRvbicpO1xyXG4gICAgdGhpcy5fY2FyZFN1Ym1pdEJ1dHRvbkNvbnRlbnQgPSB0aGlzLl9jYXJkU3VibWl0QnV0dG9uLnRleHRDb250ZW50O1xyXG4gIH1cclxuXHJcbiAgLy/QnNC10YLQvtC0LCDQutC+0YLQvtGA0YvQuSDRgdC+0LHQuNGA0LDQtdGCINC00LDQvdC90YvQtSDQstGB0LXRhSDQv9C+0LvQtdC5INGE0L7RgNC80YtcclxuICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XHJcbiAgICBjb25zdCB2YWx1ZXMgPSB7fTtcclxuICAgIHRoaXMuX2lucHV0cy5mb3JFYWNoKGlucHV0ID0+IHtcclxuICAgICAgdmFsdWVzW2lucHV0Lm5hbWVdID0gaW5wdXQudmFsdWU7XHJcbiAgICB9KTtcclxuICAgIHJldHVybiB2YWx1ZXM7XHJcbiAgfVxyXG5cclxuICAvL9Cc0LXRgtC+0LQsINC00L7QsdCw0LLQu9GP0Y7RiNC40Lkg0LTQsNC90L3Ri9C1INCyINC40L3Qv9GD0YLRi1xyXG4gIHNldElucHV0VmFsdWVzKGRhdGEpIHtcclxuICAgIHRoaXMuX2lucHV0cy5mb3JFYWNoKChpbnB1dCkgPT4ge1xyXG4gICAgICBpbnB1dC52YWx1ZSA9IGRhdGFbaW5wdXQubmFtZV07XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8v0KPQstC10LTQvtC80LvQtdC90LjQtSDQv9C+0LvRjNC30L7QstCw0YLQtdC70Y8g0L4g0L/RgNC+0YbQtdGB0YHQtSDQt9Cw0LPRgNGD0LfQutC4XHJcbiAgZG93bmxvYWRJbmZvKGRvd25sb2FkLCB0ZXh0KSB7XHJcbiAgICBpZiAoZG93bmxvYWQpIHtcclxuICAgICAgdGhpcy5fY2FyZFN1Ym1pdEJ1dHRvbi5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgIHRoaXMuX2NhcmRTdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSB0ZXh0O1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5fY2FyZFN1Ym1pdEJ1dHRvbi5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuX2NhcmRTdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSB0aGlzLl9jYXJkU3VibWl0QnV0dG9uQ29udGVudDtcclxuICAgICAgfSwgNjAwKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8v0JzQtdGC0L7QtCwg0LTQvtCx0LDQstC70Y/RjtGJ0LjQuSDQvtCx0YDQsNCx0L7RgtGH0LjQuiDQutC70LjQutCwIFwi0LrRgNC10YHRgtC40LrRg1wiINC4INGB0LDQsdC80LjRgtGDINGE0L7RgNC80YtcclxuICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIChldnQpID0+IHtcclxuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIHRoaXMuX3N1Ym1pdEZvcm0odGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8v0JzQtdGC0L7QtCDRgdCx0YDQvtGB0LAg0L/QvtC70LXQuSDQv9GA0Lgg0LfQsNC60YDRi9GC0LjRjyDQv9C+0L/QsNC/0LAgKNC/0LXRgNC10LfQsNC/0LjRgdGMINGA0L7QtNC40YLQtdC70YzRgdC60L7Qs9C+INC30LDQutGA0YvRgtC40Y8g0L/QvtC/0LDQv9CwKVxyXG4gIGNsb3NlKCkge1xyXG4gICAgc3VwZXIuY2xvc2UoKTtcclxuICAgIHRoaXMuX2Zvcm0ucmVzZXQoKTtcclxuICB9XHJcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VySW5mbyB7XHJcbiAgLy/Qn9GA0LjQvdC40LzQsNC10YIg0L7QsdGK0LXQutGCINGBINGB0LXQu9C10LrRgtC+0YDQsNC80Lgg0Y3Qu9C10LzQtdC90YLQvtCyIFwi0LjQvNGPXCIsIFwi0L4g0YHQtdCx0LVcIiwgXCLQsNCy0LDRgtCw0YBcIlxyXG4gIGNvbnN0cnVjdG9yKHsgdXNlck5hbWUsIHVzZXJBYm91dCwgdXNlckF2YXRhciB9KSB7XHJcbiAgICB0aGlzLl9uYW1lID0gdXNlck5hbWU7XHJcbiAgICB0aGlzLl9hYm91dCA9IHVzZXJBYm91dDtcclxuICAgIHRoaXMuX2F2YXRhciA9IHVzZXJBdmF0YXI7XHJcbiAgfVxyXG5cclxuICAvL9Cc0LXRgtC+0LQsINCy0L7Qt9Cy0YDQsNGJ0LDRjtGJ0LjQuSDQvtCx0YrQtdC60YIg0YEg0LTQsNC90L3Ri9C80Lgg0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GPXHJcbiAgZ2V0VXNlckluZm8oKSB7XHJcbiAgICBjb25zdCB1c2VySW5mbyA9IHtcclxuICAgICAgbmFtZTogdGhpcy5fbmFtZS50ZXh0Q29udGVudCxcclxuICAgICAgYWJvdXQ6IHRoaXMuX2Fib3V0LnRleHRDb250ZW50LFxyXG4gICAgICBhdmF0YXI6IHRoaXMuX2F2YXRhci5zcmMsXHJcbiAgICB9XHJcbiAgICByZXR1cm4gdXNlckluZm87XHJcbiAgfVxyXG5cclxuICAvL9Cc0LXRgtC+0LQsINC/0YDQuNC90LjQvNCw0Y7RidC40Lkg0L3QvtCy0YvQtSDQtNCw0L3QvdGL0LUg0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GPINC4INC00L7QsdCw0LLQu9GP0Y7RidC40Lkg0L3QsCDRgdGC0YDQsNC90LjRhtGDXHJcbiAgc2V0VXNlckluZm8odXNlckluZm8pIHtcclxuICAgIHRoaXMuX25hbWUudGV4dENvbnRlbnQgPSB1c2VySW5mby5uYW1lO1xyXG4gICAgdGhpcy5fYWJvdXQudGV4dENvbnRlbnQgPSB1c2VySW5mby5hYm91dDtcclxuICAgIHRoaXMuX2F2YXRhci5zcmMgPSB1c2VySW5mby5hdmF0YXI7XHJcbiAgfVxyXG59IiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3RvcihhbGxQb3B1cHMpIHtcclxuICAgIHN1cGVyKGFsbFBvcHVwcyk7XHJcbiAgICB0aGlzLl9uYW1lID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLnBvcHVwX19wbGFjZS10aXRsZScpO1xyXG4gICAgdGhpcy5fbGluayA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9faW1hZ2UtZWxlbWVudCcpO1xyXG4gIH1cclxuICBcclxuICAvL9Cf0LXRgNC10LfQsNC/0LjRgdGMINGA0L7QtNC40YLQtdC70YzRgdC60L7Qs9C+INC80LXRgtC+0LTQsCDQtNC70Y8g0L7RgtC60YDRi9GC0LjRj1xyXG4gIG9wZW4obmFtZSwgbGluaykge1xyXG4gICAgdGhpcy5fbGluay5zcmMgPSBsaW5rO1xyXG4gICAgdGhpcy5fbGluay5hbHQgPSBuYW1lO1xyXG4gICAgdGhpcy5fbmFtZS50ZXh0Q29udGVudCA9IG5hbWU7XHJcbiAgICBzdXBlci5vcGVuKCk7XHJcbiAgfVxyXG59IiwiaW1wb3J0ICcuLy4uL3BhZ2VzL2luZGV4LmNzcyc7XHJcblxyXG5pbXBvcnQge1xyXG4gIGFkZENhcmRCdXR0b24sXHJcbiAgcG9wdXBBZGRDYXJkLFxyXG4gIHByb2ZpbGVFZGl0QnV0dG9uLFxyXG4gIHBvcHVwUHJvZmlsZSxcclxuICBwcm9maWxlVGl0bGUsXHJcbiAgcHJvZmlsZVN1YnRpdGxlLFxyXG4gIGNhcmRzTGlzdCxcclxuICBwb3B1cEltYWdlLFxyXG4gIGNvbmZpZyxcclxuICBwb3B1cEF2YXRhcixcclxuICBuZXdBdmF0YXJCdXR0b24sXHJcbiAgcHJvZmlsZUF2YXRhcixcclxuICBwb3B1cENvbmZpcm0sXHJcbiAgZm9ybVZhbGlkYXRvcnNcclxufSBmcm9tICcuLi91dGlscy9jb25zdGFudHMuanMnO1xyXG5cclxuaW1wb3J0IEFwaSBmcm9tICcuLi9jb21wb25lbnRzL0FwaS5qcyc7XHJcbmltcG9ydCBDYXJkIGZyb20gJy4uL2NvbXBvbmVudHMvQ2FyZC5qcyc7XHJcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gJy4uL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyc7XHJcbmltcG9ydCBTZWN0aW9uIGZyb20gJy4uL2NvbXBvbmVudHMvU2VjdGlvbi5qcyc7XHJcbmltcG9ydCBQb3B1cFdpdGhGb3JtIGZyb20gJy4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyc7XHJcbmltcG9ydCBVc2VySW5mbyBmcm9tICcuLi9jb21wb25lbnRzL1VzZXJJbmZvLmpzJztcclxuaW1wb3J0IFBvcHVwV2l0aEltYWdlIGZyb20gJy4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMnO1xyXG5pbXBvcnQgUG9wdXBGb3JDb25maXJtIGZyb20gJy4uL2NvbXBvbmVudHMvUG9wdXBGb3JDb25maXJtLmpzJztcclxuXHJcbmxldCB1c2VySWQ7XHJcblxyXG4vL9Ch0L7Qt9C00LDQvdC40LUg0Y3QutC30LXQvNC70Y/RgNCwINC60LvQsNGB0YHQsCDQtNC70Y8g0L/QvtC70YPRh9C10L3QuNGPINC00LDQvdC90YvRhSDRgSDRgdC10YDQstC10YDQsFxyXG5jb25zdCBhcGkgPSBuZXcgQXBpKGNvbmZpZy5ob3N0LCBjb25maWcudG9rZW4pO1xyXG5cclxuLy/Qn9C+0LvRg9GH0LXQvdC40LUg0LTQsNC90L3Ri9GFINGBINGB0LXRgNCy0LXRgNCwXHJcblByb21pc2UuYWxsKFthcGkuZ2V0VXNlckluZm8oKSwgYXBpLmdldENhcmRzKCldKVxyXG4gIC50aGVuKChbdXNlckRhdGEsIGl0ZW1zXSkgPT4ge1xyXG4gICAgdXNlcklkID0gdXNlckRhdGEuX2lkO1xyXG4gICAgcHJvZmlsZUluZm8uc2V0VXNlckluZm8odXNlckRhdGEpO1xyXG4gICAgY2FyZExpc3Quc2V0SXRlbXMoaXRlbXMpO1xyXG4gICAgY2FyZExpc3QucmVuZGVySXRlbShpdGVtcyk7XHJcbiAgfSlcclxuICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5sb2coYNCe0YjQuNCx0LrQsDogJHtlcnJ9YCkpO1xyXG5cclxuLy/QodC+0LfQtNCw0L3QuNC1INGN0LrQt9C10LzQv9C70Y/RgNCwINC60LvQsNGB0YHQsCBVc2VySW5mbyDQtNC70Y8g0L7RgtC+0LHRgNCw0LbQtdC90LjRjyDQuNC90YTQvtGA0LzQsNGG0LjQuCDQviDQv9C+0LvRjNC30L7QstCw0YLQtdC70LUgXHJcbmNvbnN0IHByb2ZpbGVJbmZvID0gbmV3IFVzZXJJbmZvKHtcclxuICB1c2VyTmFtZTogcHJvZmlsZVRpdGxlLFxyXG4gIHVzZXJBYm91dDogcHJvZmlsZVN1YnRpdGxlLFxyXG4gIHVzZXJBdmF0YXI6IHByb2ZpbGVBdmF0YXIsXHJcbn0pO1xyXG5cclxuLy/QodC+0LfQtNCw0L3QuNC1INGN0LrQt9C10LzQv9C70Y/RgNCwINC60LvQsNGB0YHQsCBQb3B1cFdpdGhGb3JtINC00LvRjyDQv9C+0L/QsNC/0LAg0L/RgNC+0YTQuNC70Y9cclxuY29uc3QgcHJvZmlsZVBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0ocG9wdXBQcm9maWxlLCB7IHN1Ym1pdEZvcm06IGhhbmRsZVByb2ZpbGVQb3B1cCB9KTtcclxucHJvZmlsZVBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG4vL0PQvtGF0YDQsNC90LXQvdC40LUg0LfQsNC/0L7Qu9C90LXQvdC90L7QuSDRhNC+0YDQvNGLINGA0LXQtNCw0LrRgtC40YDQvtCy0LDQvdC40Y8g0L/RgNC+0YTQuNC70Y9cclxuZnVuY3Rpb24gaGFuZGxlUHJvZmlsZVBvcHVwKHVzZXJEYXRhKSB7XHJcbiAgcHJvZmlsZVBvcHVwLmRvd25sb2FkSW5mbyh0cnVlLCAn0KHQvtGF0YDQsNC90LXQvdC40LUuLi4nKTtcclxuICBhcGkuc2V0UHJvZmlsZUluZm8odXNlckRhdGEpXHJcbiAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgIHByb2ZpbGVJbmZvLnNldFVzZXJJbmZvKHJlcyk7XHJcbiAgICAgIHByb2ZpbGVQb3B1cC5jbG9zZSgpO1xyXG4gICAgfSlcclxuICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5sb2coYNCe0YjQuNCx0LrQsDogJHtlcnJ9YCkpXHJcbiAgLmZpbmFsbHkoKCkgPT4gcHJvZmlsZVBvcHVwLmRvd25sb2FkSW5mbyhmYWxzZSkpXHJcbn1cclxuXHJcbi8vXCLQodC70YPRiNCw0YLQtdC70YxcIiDQtNC70Y8g0L7RgtC60YDRi9GC0LjRjyDQv9C+0L/QsNC/0LAg0YDQtdC00LDQutGC0LjRgNC+0LLQsNC90LjRjyDQv9GA0L7RhNC40LvRj1xyXG5wcm9maWxlRWRpdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICBwcm9maWxlUG9wdXAub3BlbigpO1xyXG4gIGNvbnN0IHByb2ZpbGVJbnB1dFZhbHVlcyA9IHByb2ZpbGVJbmZvLmdldFVzZXJJbmZvKCk7XHJcbiAgcHJvZmlsZVBvcHVwLnNldElucHV0VmFsdWVzKHByb2ZpbGVJbnB1dFZhbHVlcyk7XHJcbiAgZm9ybVZhbGlkYXRvcnNbJ3Byb2ZpbGUtZWRpdCddLnJlc2V0VmFsaWRhdGlvbigpO1xyXG4gIGZvcm1WYWxpZGF0b3JzWydwcm9maWxlLWVkaXQnXS5kaXNhYmxlZFN1Ym1pdEJ1dHRvbigpO1xyXG59KTtcclxuXHJcbi8v0KHQvtC30LTQsNC90LjQtSDRjdC60LfQtdC80L/Qu9GP0YDQsCDQutC70LDRgdGB0LAgUG9wdXBXaXRoRm9ybSDQtNC70Y8g0L/QvtC/0LDQv9CwINC40LfQvNC10L3QtdC90LjRjyDQsNCy0LDRgtCw0YDQsFxyXG5jb25zdCBuZXdBdmF0YXJQb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKHBvcHVwQXZhdGFyLCB7IHN1Ym1pdEZvcm06IGhhbmRsZUF2YXRhclN1Ym1pdCB9KTtcclxubmV3QXZhdGFyUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbi8vXCLQodC70YPRiNCw0YLQtdC70YxcIiDQtNC70Y8g0L7RgtC60YDRi9GC0LjRjyDQv9C+0L/QsNC/0LAg0LjQt9C80LXQvdC10L3QuNGPINCw0LLQsNGC0LDRgNCwXHJcbm5ld0F2YXRhckJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICBuZXdBdmF0YXJQb3B1cC5vcGVuKCk7XHJcbiAgZm9ybVZhbGlkYXRvcnNbJ25ldy1hdmF0YXInXS5yZXNldFZhbGlkYXRpb24oKTtcclxufSlcclxuXHJcbi8vQ9C+0YXRgNCw0L3QtdC90LjQtSDQt9Cw0L/QvtC70L3QtdC90L3QvtC5INGE0L7RgNC80Ysg0LjQt9C80LXQvdC10L3QuNGPINCw0LLQsNGC0LDRgNCwXHJcbmZ1bmN0aW9uIGhhbmRsZUF2YXRhclN1Ym1pdChkYXRhKSB7XHJcbiAgbmV3QXZhdGFyUG9wdXAuZG93bmxvYWRJbmZvKHRydWUsICfQodC+0YXRgNCw0L3QtdC90LjQtS4uLicpO1xyXG4gIGFwaS5hZGROZXdBdmF0YXIoZGF0YSlcclxuICAgIC50aGVuKChyZXMpID0+IHtcclxuICAgICAgcHJvZmlsZUluZm8uc2V0VXNlckluZm8ocmVzKTtcclxuICAgICAgbmV3QXZhdGFyUG9wdXAuY2xvc2UoKTtcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5sb2coYNCe0YjQuNCx0LrQsDogJHtlcnJ9YCkpXHJcbiAgICAuZmluYWxseSgoKSA9PiBuZXdBdmF0YXJQb3B1cC5kb3dubG9hZEluZm8oZmFsc2UpKVxyXG4gIH1cclxuXHJcbi8v0KHQvtC30LTQsNC90LjQtSDQvdC+0LLRi9GFINC60LDRgNGC0L7Rh9C10Log0LzQtdGB0YJcclxuY29uc3QgY3JlYXRlQ2FyZCA9IChkYXRhKSA9PiB7XHJcbiAgY29uc3QgY2FyZCA9IG5ldyBDYXJkKGRhdGEsICcuZWxlbWVudC10ZW1wbGF0ZScsIGhhbmRsZUNhcmRDbGljaywge1xyXG4gICAgdXNlcklkOiB1c2VySWQsXHJcbiAgICBoYW5kbGVEZWxldGluZ1N1Ym1pdDogKCkgPT4ge1xyXG4gICAgICBkZWxldGluZ1BvcHVwLm9wZW4oZGF0YSk7XHJcbiAgICAgIGRlbGV0aW5nUG9wdXAuc2V0U3VibWl0QWN0aW9uKHtcclxuICAgICAgICBoYW5kbGVTdWJtaXRBY3Rpb246ICgpID0+IHtcclxuICAgICAgICAgIGFwaS5kZWxldGVDYXJkKGRhdGEpXHJcbiAgICAgICAgICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgICAgICAgICBkZWxldGluZ1BvcHVwLmNsb3NlKCk7XHJcbiAgICAgICAgICAgICAgY2FyZC5kZWxldGUoKTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGDQntGI0LjQsdC60LA6ICR7ZXJyfWApKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgfSxcclxuICAgIFxyXG4gICAgaGFuZGxlQWRkTGlrZTogKCkgPT4ge1xyXG4gICAgICBhcGkucHV0TGlrZShkYXRhKVxyXG4gICAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgICAgY2FyZC5zdW1VcExpa2VzKHJlcy5saWtlcyk7XHJcbiAgICAgICAgY2FyZC5saWtlQWRkZWQoKTtcclxuICAgICAgfSlcclxuICAgICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGDQntGI0LjQsdC60LA6ICR7ZXJyfWApKTtcclxuICAgIH0sXHJcblxyXG4gICAgaGFuZGxlUmVtb3ZlTGlrZTogKCkgPT4ge1xyXG4gICAgICBhcGkucmVtb3ZlTGlrZShkYXRhKVxyXG4gICAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgICAgY2FyZC5zdW1VcExpa2VzKHJlcy5saWtlcyk7XHJcbiAgICAgICAgY2FyZC5saWtlQ2FuY2VsZWQoKTtcclxuICAgICAgfSlcclxuICAgICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGDQntGI0LjQsdC60LA6ICR7ZXJyfWApKVxyXG4gICAgfVxyXG4gIH0pO1xyXG5cclxuICBjb25zdCBjYXJkRWxlbWVudCA9IGNhcmQuZ2VuZXJhdGVDYXJkKCk7XHJcbiAgcmV0dXJuIGNhcmRFbGVtZW50O1xyXG59XHJcblxyXG4vL9Ch0L7Qt9C00LDQvdC40LUg0Y3QutC30LXQvNC/0LvRj9GA0LAg0LrQu9Cw0YHRgdCwIFNlY3Rpb24g0LTQu9GPINC+0YLRgNC40YHQvtCy0LrQuCDQutCw0YDRgtC+0YfQtdC6INC90LAg0YHRgtGA0LDQvdC40YbQtVxyXG5jb25zdCBjYXJkTGlzdCA9IG5ldyBTZWN0aW9uKHtcclxuICByZW5kZXJlcjogKGl0ZW0pID0+IHtcclxuICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gY3JlYXRlQ2FyZChpdGVtKTtcclxuICAgIGNhcmRMaXN0LmFkZEl0ZW0oY2FyZEVsZW1lbnQpO1xyXG4gIH0sXHJcbn0sXHJcbiAgY2FyZHNMaXN0XHJcbik7XHJcblxyXG4vL9Ch0L7Qt9C00LDQvdC40LUg0Y3QutC30LXQvNC/0LvRj9GA0LAg0LrQu9Cw0YHRgdCwIFBvcHVwV2l0aEZvcm0g0LTQu9GPINC/0L7Qv9Cw0L/QsCDRgSDQutCw0YDRgtC+0YfQutCw0LzQuFxyXG5jb25zdCBuZXdDYXJkUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybShwb3B1cEFkZENhcmQsIHsgc3VibWl0Rm9ybTogaGFuZGxlckNhcmRTdWJtaXQgfSk7XHJcbm5ld0NhcmRQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuLy9cItCh0LvRg9GI0LDRgtC10LvRjFwiINC00LvRjyDQvtGC0LrRgNGL0YLQuNGPINC/0L7Qv9Cw0L/QsCDQtNC+0LHQsNCy0LvQtdC90LjRjyDQutCw0YDRgtC+0YfQutC4XHJcbmFkZENhcmRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgbmV3Q2FyZFBvcHVwLm9wZW4oKTtcclxuICBmb3JtVmFsaWRhdG9yc1snYWRkLWNhcmQnXS5yZXNldFZhbGlkYXRpb24oKTtcclxufSlcclxuXHJcbi8v0KHQvtC30LTQsNC90LjQtSDQutCw0YDRgtC+0YfQutC4INC40Lcg0LfQsNC/0L7Qu9C90LXQvdC90L7QuSDRhNC+0YDQvNGLXHJcbmZ1bmN0aW9uIGhhbmRsZXJDYXJkU3VibWl0KGRhdGEpIHtcclxuICBuZXdDYXJkUG9wdXAuZG93bmxvYWRJbmZvKHRydWUsICfQodC+0YXRgNCw0L3QtdC90LjQtS4uLicpO1xyXG4gIGFwaS5hZGRDYXJkKGRhdGEpXHJcbiAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gY3JlYXRlQ2FyZChyZXMpO1xyXG4gICAgICBjYXJkTGlzdC5hZGRJdGVtKGNhcmRFbGVtZW50KTtcclxuICAgICAgbmV3Q2FyZFBvcHVwLmNsb3NlKCk7XHJcbiAgICB9KVxyXG4gIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmxvZyhg0J7RiNC40LHQutCwOiAke2Vycn1gKSlcclxuICAuZmluYWxseSgoKSA9PiBuZXdDYXJkUG9wdXAuZG93bmxvYWRJbmZvKGZhbHNlKSlcclxufVxyXG5cclxuLy/QodC+0LfQtNCw0L3QuNC1INGN0LrQt9C10LzQv9C70Y/RgNCwINC60LvQsNGB0YHQsCBQb3B1cFdpdGhGb3JtINC00LvRjyDQv9C+0L/QsNC/0LAg0L/QvtC00YLQstC10YDQttC00LXQvdC40Y8g0YPQtNCw0LvQtdC90LjRj1xyXG5jb25zdCBkZWxldGluZ1BvcHVwID0gbmV3IFBvcHVwRm9yQ29uZmlybShwb3B1cENvbmZpcm0sIHsgc3VibWl0Rm9ybTogKCkgPT4gZGVsZXRpbmdQb3B1cC5zdWJtaXRBY3Rpb24oKSwgfSk7XHJcblxyXG5kZWxldGluZ1BvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG4vL9Ch0L7Qt9C00LDQvdC40LUg0Y3QutC30LXQvNC/0LvRj9GA0LAg0LrQu9Cw0YHRgdCwIFBvcHVwV2l0aEltYWdlINC00LvRjyDQv9C+0L/QsNC/0LAg0YEg0LjQt9C+0LHRgNCw0LbQtdC90LjRj9C80LhcclxuY29uc3QgaW1hZ2VQb3B1cCA9IG5ldyBQb3B1cFdpdGhJbWFnZShwb3B1cEltYWdlKTtcclxuaW1hZ2VQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuLy/QntGC0LrRgNGL0YLQuNC1INC/0L7Qv9Cw0L/QsCDRgSDQuNC30L7QsdGA0LDQttC10L3QuNC10LxcclxuY29uc3QgaGFuZGxlQ2FyZENsaWNrID0gKG5hbWUsIGxpbmspID0+IHtcclxuICBpbWFnZVBvcHVwLm9wZW4obmFtZSwgbGluayk7XHJcbn1cclxuXHJcbi8v0JLQsNC70LjQtNCw0YbQuNGPXHJcbmNvbnN0IGVuYWJsZVZhbGlkYXRpb24gPSAoY29uZmlnKSA9PiB7XHJcbiAgY29uc3QgZm9ybUxpc3QgPSBBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoY29uZmlnLmZvcm1TZWxlY3RvcikpXHJcbiAgZm9ybUxpc3QuZm9yRWFjaCgoZm9ybUVsZW1lbnQpID0+IHtcclxuICAgIGNvbnN0IHZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKGZvcm1FbGVtZW50LCBjb25maWcpXHJcbiAgICBjb25zdCBmb3JtTmFtZSA9IGZvcm1FbGVtZW50LmdldEF0dHJpYnV0ZSgnbmFtZScpXHJcbiAgICBmb3JtVmFsaWRhdG9yc1tmb3JtTmFtZV0gPSB2YWxpZGF0b3I7XHJcbiAgICB2YWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG4gICB9KTtcclxuIH07XHJcblxyXG4gZW5hYmxlVmFsaWRhdGlvbihjb25maWcpOyIsImltcG9ydCBQb3B1cCBmcm9tICcuL1BvcHVwLmpzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwRm9yQ29uZmlybSBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3RvciAoYWxsUG9wdXBzLCB7IHN1Ym1pdEZvcm0gfSkge1xyXG4gICAgc3VwZXIoYWxsUG9wdXBzKTtcclxuICAgIHRoaXMuX2Zvcm0gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2Zvcm0nKTtcclxuICAgIHRoaXMuX3N1Ym1pdEZvcm0gPSBzdWJtaXRGb3JtO1xyXG4gIH1cclxuXHJcbiAgLy/QpNGD0L3QutGG0LjRjyDQvtCx0YDQsNCx0L7RgtC60Lgg0L/QvtC00YLQstC10YDQttC00LXQvdC40Y8g0YPQtNCw0LvQtdC90LjRj1xyXG4gIHNldFN1Ym1pdEFjdGlvbiAoeyBoYW5kbGVTdWJtaXRBY3Rpb24gfSkge1xyXG4gICAgdGhpcy5zdWJtaXRBY3Rpb24gPSBoYW5kbGVTdWJtaXRBY3Rpb247XHJcbiAgfVxyXG5cclxuICBvcGVuKGNhcmQpIHtcclxuICAgIHN1cGVyLm9wZW4oKTtcclxuICAgIHRoaXMuX2NhcmQgPSBjYXJkO1xyXG4gIH1cclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgdGhpcy5fZm9ybS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCAoZXZ0KSA9PiB7XHJcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICB0aGlzLl9zdWJtaXRGb3JtKHRoaXMuX2NhcmQpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG59Il0sIm5hbWVzIjpbInBvcHVwSW1hZ2UiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJhZGRDYXJkQnV0dG9uIiwicXVlcnlTZWxlY3RvckFsbCIsInBvcHVwQWRkQ2FyZCIsInByb2ZpbGVFZGl0QnV0dG9uIiwicG9wdXBQcm9maWxlIiwicHJvZmlsZVRpdGxlIiwicHJvZmlsZVN1YnRpdGxlIiwiY2FyZHNMaXN0IiwicG9wdXBBdmF0YXIiLCJuZXdBdmF0YXJCdXR0b24iLCJwcm9maWxlQXZhdGFyIiwicG9wdXBDb25maXJtIiwiZm9ybVZhbGlkYXRvcnMiLCJjb25maWciLCJmb3JtU2VsZWN0b3IiLCJpbnB1dFNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJpbnB1dEVycm9yQ2xhc3MiLCJlcnJvclZpc2libGVDbGFzcyIsImhvc3QiLCJ0b2tlbiIsIkFwaSIsInRoaXMiLCJfaG9zdCIsIl90b2tlbiIsIl9nZXRKc29uT3JFcnJvciIsImJpbmQiLCJfZ2V0SGVhZGVycyIsImF1dGhvcml6YXRpb24iLCJyZXMiLCJvayIsImpzb24iLCJFcnJvciIsInN0YXR1cyIsImZldGNoIiwiaGVhZGVycyIsInRoZW4iLCJkYXRhIiwibWV0aG9kIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJuYW1lIiwiYWJvdXQiLCJhdmF0YXIiLCJfaWQiLCJDYXJkIiwiY2FyZFNlbGVjdG9yIiwiaGFuZGxlQ2FyZENsaWNrIiwidXNlcklkIiwiaGFuZGxlQWRkTGlrZSIsImhhbmRsZVJlbW92ZUxpa2UiLCJoYW5kbGVEZWxldGluZ1N1Ym1pdCIsIl9uYW1lIiwiX2xpbmsiLCJsaW5rIiwiX2xpa2VzIiwibGlrZXMiLCJfY2FyZE93bmVySWQiLCJvd25lciIsIl9oYW5kbGVBZGRMaWtlIiwiX2hhbmRsZVJlbW92ZUxpa2UiLCJfY2FyZFNlbGVjdG9yIiwiX2hhbmRsZUNhcmRDbGljayIsIl9oYW5kbGVEZWxldGluZ1N1Ym1pdCIsImNvbnRlbnQiLCJjbG9uZU5vZGUiLCJfZWxlbWVudCIsIl9nZXRUZW1wbGF0ZSIsIl9pbWFnZUVsZW1lbnQiLCJfdGl0bGVJbWFnZUVsZW1lbnQiLCJfY2FyZERlbGV0ZUJ1dHRvbiIsIl9jYXJkTGlrZUJ1dHRvbiIsIl9saWtlQW1vdW50IiwiX2NhcmRJbWFnZSIsInNyYyIsImFsdCIsInRleHRDb250ZW50IiwiY2xhc3NMaXN0IiwiYWRkIiwic3VtVXBMaWtlcyIsIl9oYW5kbGVMaWtlQ2xpY2siLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJsZW5ndGgiLCJmb3JFYWNoIiwibGlrZSIsInRvZ2dsZSIsInJlbW92ZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJjb250YWlucyIsIkZvcm1WYWxpZGF0b3IiLCJmb3JtRWxlbWVudCIsIl9mb3JtRWxlbWVudCIsIl9jb25maWciLCJfaW5wdXRMaXN0IiwiQXJyYXkiLCJmcm9tIiwiX3N1Ym1pdEJ1dHRvbkVsZW1lbnQiLCJpbnB1dEVsZW1lbnQiLCJlcnJvckVsZW1lbnQiLCJpZCIsImVycm9yTWVzc2FnZSIsInZhbGlkaXR5IiwidmFsaWQiLCJfaGlkZUlucHV0RXJyb3IiLCJfc2hvd0lucHV0RXJyb3IiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsInNvbWUiLCJfaGFzSW52YWxpZElucHV0IiwiZGlzYWJsZWQiLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwiX3RvZ2dsZUJ1dHRvblN0YXRlIiwiU2VjdGlvbiIsInJlbmRlcmVyIiwiX3JlbmRlcmVyIiwiX2NvbnRhaW5lciIsIml0ZW1zIiwiX3JlbmRlcmVkSXRlbXMiLCJpdGVtIiwicHJlcGVuZCIsIlBvcHVwIiwiYWxsUG9wdXBzIiwiX3BvcHVwIiwiX2hhbmRsZUVzY0Nsb3NlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImV2dCIsImtleSIsImNsb3NlIiwidGFyZ2V0IiwiUG9wdXBXaXRoRm9ybSIsInN1Ym1pdEZvcm0iLCJfZm9ybSIsIl9pbnB1dHMiLCJfc3VibWl0Rm9ybSIsIl9jYXJkU3VibWl0QnV0dG9uIiwiX2NhcmRTdWJtaXRCdXR0b25Db250ZW50IiwidmFsdWVzIiwiaW5wdXQiLCJ2YWx1ZSIsImRvd25sb2FkIiwidGV4dCIsInNldFRpbWVvdXQiLCJwcmV2ZW50RGVmYXVsdCIsIl9nZXRJbnB1dFZhbHVlcyIsInJlc2V0IiwiVXNlckluZm8iLCJ1c2VyTmFtZSIsInVzZXJBYm91dCIsInVzZXJBdmF0YXIiLCJfYWJvdXQiLCJfYXZhdGFyIiwidXNlckluZm8iLCJQb3B1cFdpdGhJbWFnZSIsIlBvcHVwRm9yQ29uZmlybSIsImhhbmRsZVN1Ym1pdEFjdGlvbiIsInN1Ym1pdEFjdGlvbiIsImNhcmQiLCJfY2FyZCIsImFwaSIsIlByb21pc2UiLCJhbGwiLCJnZXRVc2VySW5mbyIsImdldENhcmRzIiwidXNlckRhdGEiLCJwcm9maWxlSW5mbyIsInNldFVzZXJJbmZvIiwiY2FyZExpc3QiLCJzZXRJdGVtcyIsInJlbmRlckl0ZW0iLCJjYXRjaCIsImVyciIsImNvbnNvbGUiLCJsb2ciLCJwcm9maWxlUG9wdXAiLCJkb3dubG9hZEluZm8iLCJzZXRQcm9maWxlSW5mbyIsImZpbmFsbHkiLCJzZXRFdmVudExpc3RlbmVycyIsIm9wZW4iLCJwcm9maWxlSW5wdXRWYWx1ZXMiLCJzZXRJbnB1dFZhbHVlcyIsIm5ld0F2YXRhclBvcHVwIiwiYWRkTmV3QXZhdGFyIiwiY3JlYXRlQ2FyZCIsImRlbGV0aW5nUG9wdXAiLCJzZXRTdWJtaXRBY3Rpb24iLCJkZWxldGVDYXJkIiwiZGVsZXRlIiwicHV0TGlrZSIsImxpa2VBZGRlZCIsInJlbW92ZUxpa2UiLCJsaWtlQ2FuY2VsZWQiLCJnZW5lcmF0ZUNhcmQiLCJjYXJkRWxlbWVudCIsImFkZEl0ZW0iLCJuZXdDYXJkUG9wdXAiLCJhZGRDYXJkIiwiaW1hZ2VQb3B1cCIsInZhbGlkYXRvciIsImZvcm1OYW1lIiwiZ2V0QXR0cmlidXRlIiwiZW5hYmxlVmFsaWRhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=